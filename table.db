CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

drop table if exists MEDIA_PARTNER CASCADE;
drop table if exists MEDIA_PARTNER_PACKAGE CASCADE;
drop table if exists MEDIA_PARTNER_REVIEW CASCADE;

CREATE TABLE MEDIA_PARTNER (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    created_by VARCHAR(255),
    approved_by VARCHAR(255),
    logo_url VARCHAR(255),
    name VARCHAR(255) NOT NULL,
    description VARCHAR(25565),
    value VARCHAR(25565),
    last_updated TIMESTAMP DEFAULT current_timestamp,
    updated_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT current_timestamp,
    field VARCHAR(255) NOT NULL,
    is_approved BOOLEAN DEFAULT false,
    is_active BOOLEAN DEFAULT true,
    is_archived BOOLEAN DEFAULT false,
    email VARCHAR(255), 
    line VARCHAR(255),
    twitter VARCHAR(255),
    whatsapp VARCHAR(255),
    instagram VARCHAR(255),
    website VARCHAR(255),
    location VARCHAR(255)
);

CREATE TABLE MEDIA_PARTNER_PACKAGE (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    mp_id UUID NOT NULL,
	CONSTRAINT fk_mp
      FOREIGN KEY(mp_id) 
	  REFERENCES media_partner(id)
	  ON DELETE cascade,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(25565),
    price FLOAT NOT NULL
);

CREATE TABLE MEDIA_PARTNER_REVIEW (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    mp_id UUID NOT NULL,
	CONSTRAINT fk_mp
      FOREIGN KEY(mp_id) 
	  REFERENCES media_partner(id)
	  ON DELETE cascade,
    user_id VARCHAR(255) NOT NULL,
    review VARCHAR(255),
    rating INTEGER
);

drop table if exists SPONSORSHIP CASCADE;
drop table if exists SPONSORSHIP_REVIEW CASCADE;

CREATE TABLE SPONSORSHIP (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    created_by VARCHAR(255),
    approved_by VARCHAR(255),
    logo_url VARCHAR(255),
    name VARCHAR(255) NOT NULL,
    description VARCHAR(25565),
    value VARCHAR(25565),
    last_updated TIMESTAMP DEFAULT current_timestamp,
    updated_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT current_timestamp,
    field VARCHAR(255) NOT NULL,
    is_approved BOOLEAN DEFAULT false,
    is_active BOOLEAN DEFAULT true,
    is_archived BOOLEAN DEFAULT false,
    email VARCHAR(255), 
    line VARCHAR(255),
    twitter VARCHAR(255),
    whatsapp VARCHAR(255),
    instagram VARCHAR(255),
    website VARCHAR(255),
    location VARCHAR(255)
);


CREATE TABLE SPONSORSHIP_REVIEW (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    sp_id UUID NOT NULL,
	CONSTRAINT fk_sp
      FOREIGN KEY(sp_id) 
	  REFERENCES sponsorship(id)
	  ON DELETE cascade,
    user_id VARCHAR(255) NOT NULL,
    review VARCHAR(255),
    rating INTEGER
);

drop table if exists RENTALS CASCADE;
drop table if exists RENTALS_DETAIL CASCADE;
drop table if exists RENTALS_PACKAGE CASCADE;
drop table if exists RENTALS_SOCIAL_MEDIA CASCADE;
drop table if exists RENTALS_REVIEW CASCADE;

CREATE TABLE RENTALS (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    created_by VARCHAR(255),
    approved_by VARCHAR(255),
    logo_url VARCHAR(255),
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    value VARCHAR(255),
    last_updated TIMESTAMP DEFAULT current_timestamp,
    updated_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT current_timestamp, 
    is_approved BOOLEAN DEFAULT false,
    is_active BOOLEAN DEFAULT true
);

CREATE TABLE RENTALS_SOCIAL_MEDIA (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    rt_id UUID NOT NULL,
	CONSTRAINT fk_rt
      FOREIGN KEY(rt_id) 
	  REFERENCES rentals(id)
	  ON DELETE cascade,
    social_media VARCHAR(255) NOT NULL,
    link VARCHAR(255) NOT NULL
);

CREATE TABLE RENTALS_PACKAGE (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    rt_id UUID NOT NULL,
	CONSTRAINT fk_rt
      FOREIGN KEY(rt_id) 
	  REFERENCES rentals(id)
	  ON DELETE cascade,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    price FLOAT NOT NULL
);

CREATE TABLE RENTALS_REVIEW (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    rt_id UUID NOT NULL,
	CONSTRAINT fk_rt
      FOREIGN KEY(rt_id) 
	  REFERENCES rentals(id)
	  ON DELETE cascade,
    user_id VARCHAR(255) NOT NULL,
    review VARCHAR(255),
    rating INTEGER
);

drop table if exists RENTALS CASCADE;
drop table if exists RENTALS_DETAIL CASCADE;
drop table if exists RENTALS_PACKAGE CASCADE;
drop table if exists RENTALS_SOCIAL_MEDIA CASCADE;
drop table if exists RENTALS_REVIEW CASCADE;

CREATE TABLE RENTALS (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    created_by VARCHAR(255),
    approved_by VARCHAR(255),
    logo_url VARCHAR(255),
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    value VARCHAR(255),
    last_updated TIMESTAMP DEFAULT current_timestamp,
    updated_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT current_timestamp, 
    is_approved BOOLEAN DEFAULT false,
    is_active BOOLEAN DEFAULT true,
    is_archived BOOLEAN DEFAULT false
);

CREATE TABLE RENTALS_SOCIAL_MEDIA (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    rt_id UUID NOT NULL,
	CONSTRAINT fk_rt
      FOREIGN KEY(rt_id) 
	  REFERENCES rentals(id)
	  ON DELETE cascade,
    social_media VARCHAR(255) NOT NULL,
    link VARCHAR(255) NOT NULL
);

CREATE TABLE RENTALS_PACKAGE (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    rt_id UUID NOT NULL,
	CONSTRAINT fk_rt
      FOREIGN KEY(rt_id) 
	  REFERENCES rentals(id)
	  ON DELETE cascade,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    price FLOAT NOT NULL
);

CREATE TABLE RENTALS_IMAGE (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    package_id UUID NOT NULL,
    CONSTRAINT fk_package
      FOREIGN KEY(package_id) 
      REFERENCES RENTALS_PACKAGE(id)
      ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    image_url VARCHAR(255) NOT NULL
);

CREATE TABLE RENTALS_REVIEW (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    rt_id UUID NOT NULL,
	CONSTRAINT fk_rt
      FOREIGN KEY(rt_id) 
	  REFERENCES rentals(id)
	  ON DELETE cascade,
    user_id VARCHAR(255) NOT NULL,
    review VARCHAR(255),
    rating INTEGER
);

drop table if exists CHAT_ROOM CASCADE;
drop table if exists CHAT_MESSAGE CASCADE;

CREATE TABLE CHAT_ROOM (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
	created_at TIMESTAMP DEFAULT current_timestamp,
    customer_id VARCHAR(255) NOT NULL,
    business_id VARCHAR(255) NOT NULL
);

CREATE TABLE CHAT_MESSAGE (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    created_at TIMESTAMP DEFAULT current_timestamp,
    room_id UUID NOT NULL,
    CONSTRAINT fk_room_id
        FOREIGN KEY(room_id) 
        REFERENCES CHAT_ROOM(id)
        ON DELETE cascade,
    user_id VARCHAR(255) NOT NULL,
    message VARCHAR(255) NOT NULL
);

drop table if exists USER_PURCHASES CASCADE;
drop table if exists PURCHASE_ITEM CASCADE;

CREATE TABLE USER_PURCHASES (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
	created_at TIMESTAMP DEFAULT current_timestamp,
	user_id VARCHAR(255) not null,
	service_id UUID not null,
	service_type VARCHAR(255) not null, 
    status VARCHAR(255),
    payment_link VARCHAR(255),
    total float
);

CREATE TABLE PURCHASE_ITEM (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
	purchase_id UUID NOT NULL,
    CONSTRAINT fk_purchase_id
        FOREIGN KEY(purchase_id) 
        REFERENCES USER_PURCHASES(id)
        ON DELETE cascade,
	package_id UUID not null,
	quantity integer not null
);

drop table if exists USER_SAVED_SERVICE CASCADE;

CREATE TABLE USER_SAVED_SERVICE (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    service_id UUID not null,
    user_id VARCHAR(255) NOT NULL,
    service_type VARCHAR(255) not null
)